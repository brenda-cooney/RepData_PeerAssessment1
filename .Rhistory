library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:xlsxjars", unload=TRUE)
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("curl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("sqldf", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?download.file
tempfile <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", tempfile, method="curl")
data_set <- read.cvs("tempfile")
data_set <- read.cvs(tempfile)
data_set <- read.csv(tempfile)
class(data_set)
View(data_set)
tempfile <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", tempfile, method="curl")
acs <- read.csv(tempfile)
?sqldf
sqldf("select * from acs where AGEP < 50")
data(farms, package = "MASS")
a3r <- subset(farms, Manag %in% c("BF", "HF"))
a3s <- sqldf("select * from farms where Manag in ('BF', 'HF')")
row.names(a3r) <- NULL
identical(a3r, a3s)
sqldf("select * from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select unique AGEP from acs")
sqldf("select distinct AGEP from acs")
sqldf("select AGEP where unique from acs")
sqldf("select distinct pwgtp1 from acs")
remove("a3r", "acs","farms", "tempfile")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
class(con)
htmlCode=readLines(con)
htmlCode
?nchar
htmlCode[10]
htmlCode[c(10,20,30, 100)]
class(htmlCode)
?nchar
result <- htmlCode[c(10,20,30,100)]
nchar(result)
close(con)
install.packages("foreign")
library("foreign", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?read.for
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
?h5createFile
?h5read
?read.fwf
data_set <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
skip=4,
widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4))
data_set <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4))
tempfile <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", tempfile, method="curl")
data_set <- read.fwf(file=tempfile, skip=4, widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4))
data_set
summary(data_set,10)
head(data_set, 10)
data_set <- read.fwf(file=tempfile, skip=4, widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4))
head(data_set, 10)
sum(data_set["V4"])
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
oauth_endpoints("github")
?oauth_app
myapp <- oauth_app(appname="github",
key="b36ead5da9681af78812",
secret="2977eb077cce8f0121896b6e48640b74dd045165")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app(appname="github",
key="b36ead5da9681af78812",
secret="2977eb077cce8f0121896b6e48640b74dd045165")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
stop_for_status(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library("httpuv", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
oauth_endpoints("github")
myapp <- oauth_app(appname="github",
key="b36ead5da9681af78812",
secret="2977eb077cce8f0121896b6e48640b74dd045165")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
oauth_endpoints("github")
myapp <- oauth_app(appname="github",
key="b36ead5da9681af78812",
secret="c64bae7a885641aab9a548f78c5159c5fc6bba62")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
str(req)
?fromJSON
class(req)
sonedData <- fromJSON("req")
sonedData <- fromJSON(req)
sonedData <- fromJSON(toJSON(req)
)
sonedData <- fromJSON(toJSON(req))
tojsoned(req)
tojsoned <- toJSON(req)
toJSON(str(req))
jsonedData <- fromJSON(toJSON(str(req)))
jsonedData
content(req)
fromJSON(content(req))
fromJSON(toJSON(content(req)))
jsonedData <- fromJSON(toJSON(content(req)))
class(jsonedData)
names(jsonedData)
names(jsonedData$releasesurl)
names(jsonedData$releases_url)
names(jsonedData["releases_url"])
names(jsonedData[["releases_url"]])
names(jsonedData["releases_url"])
class(jsonedData)
colnames(jsonedData)
jasonedData["releases_url"]
jsonedData["releases_url"]
jsonedData[,"releases_url"]
jsonedData["created_at","releases_url"]
jsonedData["created_at",]
jsonedData[,releases_url=c("https://api.github.com/repos/jtleek/datasharing/releases{/id}")]
jsonedData[,which(releases_url=c("https://api.github.com/repos/jtleek/datasharing/releases{/id}"))]
URL <- "https://api.github.com/repos/jtleek/datasharing/releases{/id}"
jsonedData[,release_url==URL]
jsonedData[,releases_url==URL]
jsonedData[,"releases_url"==URL]
jsonedData[,jsonedData["releases_url"]==URL]
jsonedData[,jsonedData["releases_url"]=URL]
jsonedData[,which(jsonedData["releases_url"]==URL)]
jsonedData["releases_url"]==URL
jsonedData["releases_url"]
?is.identical
is.compare
?is.compare
?is.same
?chmatch
?is.match
jsonedData["releases_url"]
jsonedData[jsonedData["releases_url"]==URL]
jsonedData[,jsonedData["releases_url"]==URL]
jsonedData["releases_url"]==URL
which(jsonedData["releases_url"]==URL)
jasonedData[,which(jsonedData["releases_url"]==URL)]
jsonedData[,which(jsonedData["releases_url"]==URL)]
jsonedData[which(jsonedData["releases_url"]==URL)]
row <- which(jsonedData["releases_url"]==URL)
row
jsonedData[5,]
jsonedData[which(jsonedData["releases_url"]==URL)]
jsonedData[which(jsonedData["releases_url"]==URL)]
jsonedData[jsonedData["releases_url"]==URL]
jsonedData[,jsonedData["releases_url"]==URL]
jsonedData["releases_url"]==URL
jsonedData["releases_url", "created_at""]
)
ll
]
quit
!
end
bye
]]]]]
]]';'
end
quit
bye
bye()
}
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("curl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("tcltk", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("xlsxjars", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
getwd()
setwd("/Users/brenda_acting/datasciencecoursera/RepData_PeerAssessment1")
getwd()
if(!is.element(c("summarySCC_PM25.rds"), dir())) {
tempfile <- tempfile() ## Create temporary file to hold zipped file
URL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(URL, tempfile, method = "curl") ## Download file and store in tempfile
unzip(tempfile) ## unzip file
remove(tempfile, URL) ## Remove data nolonger needed
}
?readRDS
?hist
library(dplyr)
dataSet <- tbl_df(read.csv("activity.csv"))
new_dataSet <- summarise(group_by(date),
total_StepsPerDay=sum(steps, na.rm=TRUE))
hist(dataSet$total_StepsPerDay)
new_dataSet <- summarise(group_by(date),
total_StepsPerDay=sum(steps, na.rm=TRUE))
str(dataSet)
group_by(date)
?group_by
group_by(dataSet$date)
group_by(dataSet, date)
new_dataSet <- summarise(group_by(dataSet, date),
total_StepsPerDay=sum(steps, na.rm=TRUE))
hist(new_dataSet$total_StepsPerDay)
?summarise
new_dataSet
dataSet(, date = "2012-10-03")
dataSet[, date = "2012-10-03"]
dataSet[]
dataSet[, date == "2012-10-03"]
dataSet[, date = "2012-10-03"]
dataSet[, "2012-10-03"]
dataSet[, date %in% "2012-10-03"]
dataSet[, date = "2012-10-03"]
dataSet[, date = c("2012-10-03")]
dataSet[date = c("2012-10-03"), ]
dataSet[which(dataSet[, date] = "2012-10-03"), ]
dataSet[which(dataSet[, date] == "2012-10-03"), ]
dataSet[which(dataSet[, date] =c("2012-10-03")), ]
dataSet[which(dataSet[, date] = c("2012-10-03")), ]
dataSet[which(dataSet[, date] == c("2012-10-03")), ]
dataSet[which(dataSet$date == c("2012-10-03")), ]
dataSet[which(dataSet$date == c("2012-10-02")), ]
dataSet[which(dataSet$date == c("2012-10-02")), ]
?hist
new_dataSet
